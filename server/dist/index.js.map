{"version":3,"sources":["../src/index.js"],"names":["app","mongoose","connect","config","uri","useNewUrlParser","err","console","error","Promise","global","use","origin","bodyParser","json","urlencoded","extended","get","req","res","send","JobRouter","next","log","message","status","port","process","env","PORT","http","createServer","listen"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;;AAEAC,qBACGC,OADH,CACWC,mBAAOF,QAAP,CAAgBG,GAD3B,EACgC;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CADhC,WAES,UAACC,GAAD;AAAA,SAASC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAT;AAAA,CAFT;;AAIAL,qBAASQ,OAAT,GAAmBC,MAAM,CAACD,OAA1B,C,CAEA;;AACAT,GAAG,CAACW,GAAJ,CACE,sBAAK;AACHC,EAAAA,MAAM,EAAE,CAAC,uBAAD;AADL,CAAL,CADF;AAKAZ,GAAG,CAACW,GAAJ,CAAQ,wBAAO,KAAP,CAAR;AACAX,GAAG,CAACW,GAAJ,CAAQE,uBAAWC,IAAX,EAAR;AACAd,GAAG,CAACW,GAAJ,CAAQE,uBAAWE,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AAEAhB,GAAG,CAACiB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACC,IAAJ,CAAS,UAAT,CAAd;AAAA,CAAb;AACApB,GAAG,CAACW,GAAJ,CAAQ,OAAR,EAAiBU,eAAjB;AAEArB,GAAG,CAACW,GAAJ,CAAQ,UAACL,GAAD,EAAMY,GAAN,EAAWC,GAAX,EAAgBG,IAAhB,EAAyB;AAC/Bf,EAAAA,OAAO,CAACgB,GAAR,CAAY,QAAZ,EAAsBjB,GAAG,CAACkB,OAA1B;AACAL,EAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBX,IAAhB,CAAqBR,GAAG,CAACkB,OAAzB;AACD,CAHD,E,CAKA;;AACA,IAAME,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;;AACAC,iBAAKC,YAAL,CAAkB/B,GAAlB,EAAuBgC,MAAvB,CAA8BN,IAA9B,EAAoC,YAAM;AACxCnB,EAAAA,OAAO,CAACgB,GAAR,4CAAgDG,IAAhD;AACD,CAFD","sourcesContent":["import express from \"express\";\r\nimport http from \"http\";\r\nimport bodyParser from \"body-parser\";\r\nimport morgan from \"morgan\";\r\nimport mongoose from \"mongoose\";\r\nimport cors from \"cors\";\r\nimport config from \"./config\";\r\nimport JobRouter from './api/routes/job.router';\r\n\r\nconst app = express();\r\n\r\nmongoose\r\n  .connect(config.mongoose.uri, { useNewUrlParser: true })\r\n  .catch((err) => console.error(err));\r\n\r\nmongoose.Promise = global.Promise;\r\n\r\n// App Setup\r\napp.use(\r\n  cors({\r\n    origin: [\"http://localhost:3000\"],\r\n  })\r\n);\r\napp.use(morgan(\"dev\"));\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\n\r\napp.get(\"/\", (req, res) => res.send(\"Welcome!\"));\r\napp.use(\"/jobs\", JobRouter);\r\n\r\napp.use((err, req, res, next) => {\r\n  console.log(\"Error:\", err.message);\r\n  res.status(422).json(err.message);\r\n});\r\n\r\n// Server Setup\r\nconst port = process.env.PORT || 8000;\r\nhttp.createServer(app).listen(port, () => {\r\n  console.log(`\\x1b[32m`, `Server listening on: ${port}`, `\\x1b[0m`);\r\n});\r\n"],"file":"index.js"}